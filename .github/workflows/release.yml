name: Release

on:
  release:
    types: [created]

jobs:
  release:
    name: Release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
            binary_name: stalker2-mod-manager

    steps:
      - uses: actions/checkout@v4
      
      - name: Install GTK dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-4-dev libadwaita-1-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Create archive
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ${{ matrix.binary_name }}-${{ matrix.target }}.tar.gz ${{ matrix.binary_name }} ../../README.md ../../LICENSE

      # Upload archive
      - name: Upload archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.binary_name }}-${{ matrix.target }}.tar.gz
          asset_name: ${{ matrix.binary_name }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip

      # Upload raw binary
      - name: Upload raw binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.binary_name }}
          asset_name: ${{ matrix.binary_name }}-${{ matrix.target }}
          asset_content_type: application/octet-stream 